[{"C:\\Users\\RAMA\\Documents\\Hacktiv8 Assignment\\Phase 3\\entertain-me\\client\\src\\index.tsx":"1","C:\\Users\\RAMA\\Documents\\Hacktiv8 Assignment\\Phase 3\\entertain-me\\client\\src\\reportWebVitals.ts":"2","C:\\Users\\RAMA\\Documents\\Hacktiv8 Assignment\\Phase 3\\entertain-me\\client\\src\\App.tsx":"3","C:\\Users\\RAMA\\Documents\\Hacktiv8 Assignment\\Phase 3\\entertain-me\\client\\src\\components\\Header.tsx":"4","C:\\Users\\RAMA\\Documents\\Hacktiv8 Assignment\\Phase 3\\entertain-me\\client\\src\\config\\graphql.ts":"5","C:\\Users\\RAMA\\Documents\\Hacktiv8 Assignment\\Phase 3\\entertain-me\\client\\src\\pages\\Home.tsx":"6","C:\\Users\\RAMA\\Documents\\Hacktiv8 Assignment\\Phase 3\\entertain-me\\client\\src\\components\\Movies.tsx":"7","C:\\Users\\RAMA\\Documents\\Hacktiv8 Assignment\\Phase 3\\entertain-me\\client\\src\\components\\AddForm.tsx":"8","C:\\Users\\RAMA\\Documents\\Hacktiv8 Assignment\\Phase 3\\entertain-me\\client\\src\\config\\queries.ts":"9","C:\\Users\\RAMA\\Documents\\Hacktiv8 Assignment\\Phase 3\\entertain-me\\client\\src\\helpers\\useHandleInputForm.ts":"10","C:\\Users\\RAMA\\Documents\\Hacktiv8 Assignment\\Phase 3\\entertain-me\\client\\src\\components\\EditForm.tsx":"11","C:\\Users\\RAMA\\Documents\\Hacktiv8 Assignment\\Phase 3\\entertain-me\\client\\src\\pages\\MovieDetail.tsx":"12","C:\\Users\\RAMA\\Documents\\Hacktiv8 Assignment\\Phase 3\\entertain-me\\client\\src\\pages\\SeriesDetail.tsx":"13","C:\\Users\\RAMA\\Documents\\Hacktiv8 Assignment\\Phase 3\\entertain-me\\client\\src\\pages\\Favourites.jsx":"14","C:\\Users\\RAMA\\Documents\\Hacktiv8 Assignment\\Phase 3\\entertain-me\\client\\src\\config\\cache.js":"15","C:\\Users\\RAMA\\Documents\\Hacktiv8 Assignment\\Phase 3\\entertain-me\\client\\src\\components\\Movie.jsx":"16","C:\\Users\\RAMA\\Documents\\Hacktiv8 Assignment\\Phase 3\\entertain-me\\client\\src\\components\\Series.jsx":"17"},{"size":500,"mtime":499162500000,"results":"18","hashOfConfig":"19"},{"size":425,"mtime":499162500000,"results":"20","hashOfConfig":"19"},{"size":548,"mtime":1607524019814,"results":"21","hashOfConfig":"19"},{"size":1267,"mtime":1607526328769,"results":"22","hashOfConfig":"19"},{"size":857,"mtime":1607575543433,"results":"23","hashOfConfig":"19"},{"size":1078,"mtime":1607530037791,"results":"24","hashOfConfig":"19"},{"size":2633,"mtime":1607530271730,"results":"25","hashOfConfig":"19"},{"size":3055,"mtime":1607533977021,"results":"26","hashOfConfig":"19"},{"size":2573,"mtime":1607528593000,"results":"27","hashOfConfig":"19"},{"size":411,"mtime":1607494695452,"results":"28","hashOfConfig":"19"},{"size":2652,"mtime":1607526149275,"results":"29","hashOfConfig":"19"},{"size":2822,"mtime":1607523497208,"results":"30","hashOfConfig":"19"},{"size":2824,"mtime":1607523397201,"results":"31","hashOfConfig":"19"},{"size":1444,"mtime":1607534079848,"results":"32","hashOfConfig":"19"},{"size":84,"mtime":1607532539872,"results":"33","hashOfConfig":"19"},{"size":5391,"mtime":1607533471907,"results":"34","hashOfConfig":"19"},{"size":6761,"mtime":1607533879129,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1celnw3",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"73"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\RAMA\\Documents\\Hacktiv8 Assignment\\Phase 3\\entertain-me\\client\\src\\index.tsx",[],["79","80"],"C:\\Users\\RAMA\\Documents\\Hacktiv8 Assignment\\Phase 3\\entertain-me\\client\\src\\reportWebVitals.ts",[],"C:\\Users\\RAMA\\Documents\\Hacktiv8 Assignment\\Phase 3\\entertain-me\\client\\src\\App.tsx",["81","82","83"],"import React from 'react';\nimport './App.css';\nimport {Home} from './pages/Home'\nimport { Header } from './components/Header'\nimport { ApolloProvider } from '@apollo/client';\nimport client from './config/graphql';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <ApolloProvider client={client}>\n        <Router>\n          <Header />\n          <Home />\n        </Router>\n      </ApolloProvider>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\RAMA\\Documents\\Hacktiv8 Assignment\\Phase 3\\entertain-me\\client\\src\\components\\Header.tsx",[],"C:\\Users\\RAMA\\Documents\\Hacktiv8 Assignment\\Phase 3\\entertain-me\\client\\src\\config\\graphql.ts",["84"],"C:\\Users\\RAMA\\Documents\\Hacktiv8 Assignment\\Phase 3\\entertain-me\\client\\src\\pages\\Home.tsx",["85","86","87"],"import React from 'react';\r\nimport { useQuery, gql } from '@apollo/client';\r\nimport { Movies } from '../components/Movies'\r\nimport { Switch, Route, useHistory, Redirect } from 'react-router-dom';\r\nimport { Series } from '../components/Series';\r\nimport { AddForm } from '../components/AddForm';\r\nimport { MovieDetail } from './MovieDetail';\r\nimport { SeriesDetail } from './SeriesDetail';\r\nimport { Favourites } from './Favourites';\r\n\r\n\r\nexport const Home: React.FC = () => {\r\n  const history = useHistory();\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/movies\">\r\n        <Movies />\r\n      </Route>\r\n      <Route exact path=\"/tvseries\">\r\n        <Series />\r\n      </Route>\r\n      <Route path=\"/:category/add\">\r\n        <AddForm />\r\n      </Route>\r\n      <Route path=\"/movies/:id\">\r\n        <MovieDetail />\r\n      </Route>\r\n      <Route path=\"/tvseries/:id\">\r\n        <SeriesDetail />\r\n      </Route>\r\n      <Route path=\"/favourites\">\r\n        <Favourites />\r\n      </Route>\r\n      <Route path=\"/\">\r\n        <Redirect to=\"/movies\" />\r\n      </Route>\r\n    </Switch>\r\n  )\r\n}","C:\\Users\\RAMA\\Documents\\Hacktiv8 Assignment\\Phase 3\\entertain-me\\client\\src\\components\\Movies.tsx",["88","89","90","91","92","93","94","95","96","97","98","99","100","101","102"],"import { useMutation, useQuery } from '@apollo/client';\r\nimport React, { useEffect, useState } from 'react';\r\nimport {AddForm} from './AddForm'\r\nimport {EditForm} from './EditForm'\r\nimport { DELETE_MOVIE, GET_FAVOURITES, GET_MOVIES, UPDATE_MOVIE } from '../config/queries'\r\nimport useHandleInputForm from '../helpers/useHandleInputForm';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Button from 'react-bootstrap/Button'\r\nimport { Movie } from './Movie';\r\nimport { Route, Switch, useHistory } from 'react-router-dom';\r\nimport client from '../config/graphql';\r\n\r\ninterface MoviesObj {\r\n  _id: String,\r\n  title: String,\r\n  overview: String,\r\n  poster_path: String,\r\n  popularity: Number,\r\n  tags: [String]\r\n}\r\n\r\nexport const Movies : React.FC = () => {\r\n    const { loading, error, data } = useQuery(GET_MOVIES)\r\n    const [deleteMovie, {data : res}] = useMutation(DELETE_MOVIE)\r\n    const [updateMovie, {data : updateRes }] = useMutation(UPDATE_MOVIE)\r\n    const { handleInputChange, input, setInput } = useHandleInputForm();\r\n\r\n    function handleDeleteButton(id: any, e: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\r\n      e.preventDefault();\r\n      deleteMovie({\r\n        variables: {\r\n          id\r\n        },\r\n        refetchQueries: [{\r\n          query: GET_MOVIES\r\n        }]\r\n      })\r\n    }\r\n\r\n    function handleUpdateButton( obj: any) {\r\n      const payload = {\r\n        id: obj._id,\r\n        title: obj.title,\r\n        overview: obj.overview,\r\n        poster_path: obj.poster_path,\r\n        popularity: obj.popularity\r\n      }\r\n      setInput(payload)\r\n    }\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const history = useHistory();\r\n    if(loading) return <h1>Loading</h1>\r\n    if(error) return <h1>Error</h1>\r\n    return (\r\n      <div className=\"container mt-4 bg-light p-5 main-bg mb-5\">\r\n        <div className=\"row d-flex mb-2\">\r\n          <div className=\"col-md-11\">\r\n            <h1 className=\"text-left ml-2\">Movies</h1>\r\n          </div>\r\n          <div className=\"col-md-1\">\r\n            <button className=\"btn btn-lg text-white bg-info\" onClick={() => history.push('/movies/add')}>+</button>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          {\r\n            data.movies.map((movie : MoviesObj, i : Number) => {\r\n              return <Movie i={i} handleDeleteButton={handleDeleteButton} \r\n              handleUpdateButton={handleUpdateButton} movie={movie} handleInputChange={handleInputChange} input={input} /> \r\n            })\r\n          }  \r\n        </div>\r\n      </div>)\r\n}","C:\\Users\\RAMA\\Documents\\Hacktiv8 Assignment\\Phase 3\\entertain-me\\client\\src\\components\\AddForm.tsx",["103","104","105","106","107"],"C:\\Users\\RAMA\\Documents\\Hacktiv8 Assignment\\Phase 3\\entertain-me\\client\\src\\config\\queries.ts",[],"C:\\Users\\RAMA\\Documents\\Hacktiv8 Assignment\\Phase 3\\entertain-me\\client\\src\\helpers\\useHandleInputForm.ts",[],"C:\\Users\\RAMA\\Documents\\Hacktiv8 Assignment\\Phase 3\\entertain-me\\client\\src\\components\\EditForm.tsx",["108","109","110","111","112","113"],"import { useMutation, useQuery } from '@apollo/client';\r\nimport React, { useState } from 'react';\r\nimport useHandleInputForm from '../helpers/useHandleInputForm'\r\nimport { ADD_MOVIE, GET_MOVIES, GET_SERIES, UPDATE_MOVIE, UPDATE_SERIES } from '../config/queries'\r\n\r\ninterface Input {\r\n  title: string,\r\n  overview: string,\r\n  poster_path: string,\r\n  popularity: number\r\n}\r\n\r\ninterface Props {\r\n    input: Input,\r\n    handleInputChange: (event: React.ChangeEvent<HTMLInputElement>) => void,\r\n    category: string,\r\n    handleClose: () => void\r\n}\r\n\r\nexport const EditForm : React.FC<Props> = ({input, handleInputChange, category, handleClose}) => {\r\n  const [editMovie, { data: movieData } ] = useMutation(UPDATE_MOVIE)\r\n  const [editSeries, { data: seriesData } ] = useMutation(UPDATE_SERIES)\r\n  return (\r\n    <div>\r\n      <form onSubmit={e => {\r\n        e.preventDefault();\r\n        input.popularity = Number(input.popularity)\r\n        console.log(input)\r\n        if(category === \"Movies\") {\r\n          editMovie({\r\n            variables: {\r\n              movie: input\r\n            },\r\n            refetchQueries: [{\r\n              query: GET_MOVIES\r\n            }]\r\n          })\r\n        } else {\r\n          editSeries({\r\n            variables: {\r\n              series: input\r\n            },\r\n            refetchQueries: [{\r\n              query: GET_SERIES\r\n            }]\r\n          })\r\n        }\r\n        handleClose();\r\n      }} >\r\n      <div className=\"mb-3 text-left\">\r\n        <label htmlFor=\"title\" className=\"form-label\">Title</label>\r\n        <input name=\"title\" value={input.title} onChange={handleInputChange} required type=\"text\" className=\"form-control\" id=\"title\" />\r\n      </div>\r\n      <div className=\"mb-3 text-left\">\r\n        <label htmlFor=\"overview\" className=\"form-label\">Overview</label>\r\n        <input name=\"overview\" value={input.overview} onChange={handleInputChange} required className=\"form-control\" id=\"overview\" />\r\n      </div>\r\n      <div className=\"mb-3 text-left\">\r\n        <label htmlFor=\"posterpath\" className=\"form-label\">Poster Path</label>\r\n        <input name=\"poster_path\" value={input.poster_path} onChange={handleInputChange} required type=\"text\" className=\"form-control\" id=\"posterpath\" />\r\n      </div>\r\n      <div className=\"mb-3 text-left\">\r\n        <label htmlFor=\"popularity\" className=\"form-label\">Popularity</label>\r\n        <input name=\"popularity\" value={input.popularity} onChange={handleInputChange} required type=\"text\" className=\"form-control\" id=\"popularity\" />\r\n      </div>\r\n      <button type=\"submit\" className=\"btn btn-primary float-left\">Submit</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}","C:\\Users\\RAMA\\Documents\\Hacktiv8 Assignment\\Phase 3\\entertain-me\\client\\src\\pages\\MovieDetail.tsx",["114","115","116"],"import { useMutation, useQuery } from '@apollo/client';\r\nimport React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { GET_MOVIE_BY_ID, GET_SERIES_BY_ID } from '../config/queries';\r\n\r\ninterface Props {\r\n  data: any\r\n}\r\n\r\ninterface ParamsType {\r\n  id: string,\r\n  category: string\r\n}\r\n\r\nexport const MovieDetail : React.FC = () => {\r\n  const { id } = useParams<ParamsType>();\r\n  const { loading, error, data } = useQuery(GET_MOVIE_BY_ID, {\r\n    variables: { \r\n      id\r\n    }\r\n  })\r\n\r\n  if(loading) return <h1>Loading</h1>\r\n  if(error) return <h1>Error</h1>\r\n  console.log(data)\r\n  const dataRes = data.movie;\r\n  return (\r\n    <div className=\"d-flex justify-content-center mb-4 mt-5\">\r\n      <div className=\"card\" style={{ width: \"75rem\", height: \"25rem\", border: 0, borderRadius: '15px' }}>\r\n        <div className=\"d-flex justify-content-left g-0\">\r\n          <div className=\"\">\r\n            <img src={dataRes.poster_path} style={{ \r\n            height: \"25rem\", width: '20.68375rem', objectPosition: '0% 0%', borderRadius: '15px'}} alt=\"...\" />\r\n          </div>\r\n          <div className=\"m-0\">\r\n            <div className=\"card-body border-0\">\r\n              <div className=\"text-left\">\r\n                <div className=\"row\">\r\n                  <h2 className=\"card-title mb-3 ml-3\" style={{fontFamily: 'Gugi, cursive', color: 'black'}}>{dataRes.title}</h2>\r\n                  <p className=\"card-text mr-3 ml-auto\">{dataRes.popularity}</p>\r\n                </div>\r\n                <p className=\"card-text\">{dataRes.overview}</p>\r\n                <div className=\"row mb-5 ml-1\">\r\n                  {\r\n                    dataRes.tags.map((tag: String) => {\r\n                      return <p className=\"m-0\"><span className=\"badge bg-info text-light mr-1\">{tag}</span></p>\r\n                    })\r\n                  }\r\n                </div>\r\n                <button type=\"button\" className=\"btn btn-danger btn-lg\">Back</button>\r\n                {/* <p className=\"card-text\"><span style={{color: 'black'}}>Homeworld: </span>{character.homeworld}</p>\r\n                <p className=\"card-text\"><span style={{color: 'black'}}>Species: </span>{character.species}</p>\r\n                <p className=\"card-text\"><span style={{color: 'black'}}>Height: </span>{character.height}</p>\r\n                <p className=\"card-text\"><span style={{color: 'black'}}>Gender: </span>{character.gender}</p>\r\n                <a href={character.wiki}><button type=\"button\" className=\"btn btn-info\">Wookiepedia</button></a> */}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* <button type=\"button\" onClick={handleFavoriteButton} className=\"btn btn-primary form-control m-0\">{favIndex == 1 ? 'Remove from favourites' : 'Add to favourites'}</button> */}\r\n      </div>\r\n    </div>\r\n  )\r\n}","C:\\Users\\RAMA\\Documents\\Hacktiv8 Assignment\\Phase 3\\entertain-me\\client\\src\\pages\\SeriesDetail.tsx",["117","118","119"],"import { useMutation, useQuery } from '@apollo/client';\r\nimport React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { GET_MOVIE_BY_ID, GET_SERIES_BY_ID } from '../config/queries';\r\n\r\ninterface Props {\r\n  data: any\r\n}\r\n\r\ninterface ParamsType {\r\n  id: string,\r\n  category: string\r\n}\r\n\r\nexport const SeriesDetail : React.FC = () => {\r\n  const { id } = useParams<ParamsType>();\r\n  const { loading, error, data } = useQuery(GET_SERIES_BY_ID, {\r\n    variables: { \r\n      id\r\n    }\r\n  })\r\n\r\n  if(loading) return <h1>Loading</h1>\r\n  if(error) return <h1>Error</h1>\r\n  console.log(data)\r\n  const dataRes = data.series\r\n  return (\r\n    <div className=\"d-flex justify-content-center mb-4 mt-5\">\r\n      <div className=\"card\" style={{ width: \"75rem\", height: \"25rem\", border: 0, borderRadius: '15px' }}>\r\n        <div className=\"d-flex justify-content-left g-0\">\r\n          <div className=\"\">\r\n            <img src={dataRes.poster_path} style={{ \r\n            height: \"25rem\", width: '20.68375rem', objectPosition: '0% 0%', borderRadius: '15px'}} alt=\"...\" />\r\n          </div>\r\n          <div className=\"m-0\">\r\n            <div className=\"card-body border-0\">\r\n              <div className=\"text-left\">\r\n                <div className=\"row\">\r\n                  <h2 className=\"card-title mb-3 ml-3\" style={{fontFamily: 'Gugi, cursive', color: 'black'}}>{dataRes.title}</h2>\r\n                  <p className=\"card-text mr-3 ml-auto\">{dataRes.popularity}</p>\r\n                </div>\r\n                <p className=\"card-text\">{dataRes.overview}</p>\r\n                <div className=\"row mb-5 ml-1\">\r\n                  {\r\n                    dataRes.tags.map((tag: String) => {\r\n                      return <p className=\"m-0\"><span className=\"badge bg-info text-light mr-1\">{tag}</span></p>\r\n                    })\r\n                  }\r\n                </div>\r\n                <button type=\"button\" className=\"btn btn-danger btn-lg\">Back</button>\r\n                {/* <p className=\"card-text\"><span style={{color: 'black'}}>Homeworld: </span>{character.homeworld}</p>\r\n                <p className=\"card-text\"><span style={{color: 'black'}}>Species: </span>{character.species}</p>\r\n                <p className=\"card-text\"><span style={{color: 'black'}}>Height: </span>{character.height}</p>\r\n                <p className=\"card-text\"><span style={{color: 'black'}}>Gender: </span>{character.gender}</p>\r\n                <a href={character.wiki}><button type=\"button\" className=\"btn btn-info\">Wookiepedia</button></a> */}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* <button type=\"button\" onClick={handleFavoriteButton} className=\"btn btn-primary form-control m-0\">{favIndex == 1 ? 'Remove from favourites' : 'Add to favourites'}</button> */}\r\n      </div>\r\n    </div>\r\n  )\r\n}","C:\\Users\\RAMA\\Documents\\Hacktiv8 Assignment\\Phase 3\\entertain-me\\client\\src\\pages\\Favourites.jsx",["120"],"C:\\Users\\RAMA\\Documents\\Hacktiv8 Assignment\\Phase 3\\entertain-me\\client\\src\\config\\cache.js",[],["121","122"],"C:\\Users\\RAMA\\Documents\\Hacktiv8 Assignment\\Phase 3\\entertain-me\\client\\src\\components\\Movie.jsx",["123","124","125","126","127"],"import React, { useState } from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { EditForm } from './EditForm';\r\nimport { useHistory, useRouteMatch, Route, Switch } from \"react-router-dom\";\r\nimport { useMutation } from '@apollo/client';\r\nimport { ADD_MOVIES_TAG, GET_MOVIES } from '../config/queries';\r\nimport { Favourites as favCache } from '../config/cache'\r\n\r\n\r\n// interface Props {\r\n//   movie: any,\r\n//   handleUpdateButton: any,\r\n//   i: any,\r\n//   handleDeleteButton: any,\r\n//   handleInputChange: any,\r\n//   input: any\r\n// }\r\n\r\nexport const Movie = ({movie, handleUpdateButton, handleDeleteButton, i, handleInputChange, input}) => {\r\n  const history = useHistory();\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  let { path, url } = useRouteMatch();\r\n  const [tag, setTag] = useState('')\r\n  const [addTag, {data: tagData}] = useMutation(ADD_MOVIES_TAG)\r\n  function handleTagButton(id, e) {\r\n    e.preventDefault();\r\n    addTag({\r\n      variables: {\r\n        movie: {\r\n          id,\r\n          tag\r\n        }\r\n      },\r\n      refetchQueries: [{\r\n        query: GET_MOVIES\r\n      }]\r\n    })\r\n  }\r\n\r\n  return (\r\n    // <div className=\"col-md-2\">\r\n    //   <div className=\"card p-0 mb-4\" style={{border: '0', maxHeight: '16rem'}}>\r\n    //     <img className=\"card-img-top\" src={movie.poster_path} style={{height: '18rem', objectPosition: '0% 0%', borderRadius: '15px'}}/>\r\n    //     <div className=\"card-body py-2 px-2\" style={{fontFamily: 'Gugi, cursive', height: '14rem', padding: '0'}}>\r\n    //         <p className=\"card-title text-left\">{movie.title}</p>\r\n    //     </div>\r\n    //   </div>\r\n    // </div>\r\n    \r\n    <div key={i.toString()} className=\"card content mx-1 mt-0 border-0\" style={{ height: '15rem'}}>\r\n      <div className=\"card-body p-0 d-flex\" style={{width: '100%'}}>\r\n        <button onClick={() => {\r\n          handleUpdateButton(movie)\r\n          handleShow();\r\n          }} className=\"btn btn-warning p-3\">Edit</button>\r\n        <Modal show={show} onHide={handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Modal heading</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <EditForm category={\"Movies\"} handleClose={handleClose} handleInputChange={handleInputChange} input={input} />\r\n          </Modal.Body>\r\n        </Modal>\r\n        <div className=\"row d-flex\">\r\n          <div className=\"col-md-2\">\r\n            <img className=\"img-responsive\" alt=\"img-skeleton2\"\r\n            src={movie.poster_path} \r\n            style={{ width: '100%', height: '15rem', objectPosition: \"0% 0%\"}}></img>\r\n          </div>\r\n          <div className=\"col-md-10 m-0 text-left pl-4\">\r\n            <div className=\"row\">\r\n              <h2 className=\"card-title m-0 mt-3 ml-2 mb-1\">{movie.title}</h2>\r\n              <p className=\"text-right ml-auto card-text mt-3 mr-4\">{movie.popularity}</p>\r\n            </div>\r\n            <div className=\"row card-text m-0 mb-2\">\r\n              {\r\n                movie.tags.map((tag) => {\r\n                  return <p className=\"m-0\"><span className=\"badge bg-info text-light mr-1\">{tag}</span></p>\r\n                })\r\n              }\r\n              <button type=\"button\" className=\"btn btn-primary btn-sm ml-auto mr-3\" data-toggle=\"modal\" data-target={`#tag${i}`}>Add tag</button>\r\n              <div className=\"modal fade\" id={`tag${i}`} tabIndex={-1} role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" role=\"document\">\r\n                  <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                      <h5 className=\"modal-title\" id=\"exampleModalLabel\">Add Tag</h5>\r\n                      <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                        <span aria-hidden=\"true\">&times;</span>\r\n                      </button>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                      <div className=\"mb-3\">\r\n                        <label htmlFor=\"tag\">Add Tag</label>\r\n                      </div>\r\n                      <div className=\"mb-3\">\r\n                        <input type=\"text\" value={tag} onChange={(e) => {\r\n                          setTag(e.target.value)\r\n                        }} name=\"tag\" />\r\n                      </div>\r\n                      <button onClick={(e) => handleTagButton(movie._id, e)} type=\"button\" className=\"btn btn-sm btn-primary\" data-dismiss=\"modal\">Submit</button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n              <p className=\"card-text m-0\">{movie.overview}</p>\r\n              <button type=\"button\" className=\"btn btn-sm btn-success\" onClick={() => history.push(`/movies/${movie._id}`)}>Detail</button>\r\n              <button type=\"button\" className=\"btn btn-sm btn-danger\" onClick={() => {\r\n                let favourites = favCache()\r\n                favourites.push(movie);\r\n                favCache(favourites)\r\n              }}>Add to Favourites</button>\r\n          </div>\r\n        </div>\r\n          <button onClick={(e) => handleDeleteButton(movie._id, e)} className=\"btn btn-danger justify-content-end\">Delete</button>\r\n      </div>\r\n    </div>\r\n    )\r\n}","C:\\Users\\RAMA\\Documents\\Hacktiv8 Assignment\\Phase 3\\entertain-me\\client\\src\\components\\Series.jsx",["128","129","130"],{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":9,"column":3,"nodeType":"137","messageId":"138","endLine":9,"endColumn":9},{"ruleId":"135","severity":1,"message":"139","line":10,"column":3,"nodeType":"137","messageId":"138","endLine":10,"endColumn":8},{"ruleId":"135","severity":1,"message":"140","line":11,"column":3,"nodeType":"137","messageId":"138","endLine":11,"endColumn":7},{"ruleId":"135","severity":1,"message":"141","line":2,"column":26,"nodeType":"137","messageId":"138","endLine":2,"endColumn":36},{"ruleId":"135","severity":1,"message":"142","line":2,"column":10,"nodeType":"137","messageId":"138","endLine":2,"endColumn":18},{"ruleId":"135","severity":1,"message":"143","line":2,"column":20,"nodeType":"137","messageId":"138","endLine":2,"endColumn":23},{"ruleId":"135","severity":1,"message":"144","line":13,"column":9,"nodeType":"137","messageId":"138","endLine":13,"endColumn":16},{"ruleId":"135","severity":1,"message":"145","line":2,"column":17,"nodeType":"137","messageId":"138","endLine":2,"endColumn":26},{"ruleId":"135","severity":1,"message":"146","line":3,"column":9,"nodeType":"137","messageId":"138","endLine":3,"endColumn":16},{"ruleId":"135","severity":1,"message":"147","line":4,"column":9,"nodeType":"137","messageId":"138","endLine":4,"endColumn":17},{"ruleId":"135","severity":1,"message":"148","line":5,"column":24,"nodeType":"137","messageId":"138","endLine":5,"endColumn":38},{"ruleId":"135","severity":1,"message":"149","line":7,"column":8,"nodeType":"137","messageId":"138","endLine":7,"endColumn":13},{"ruleId":"135","severity":1,"message":"150","line":8,"column":8,"nodeType":"137","messageId":"138","endLine":8,"endColumn":14},{"ruleId":"135","severity":1,"message":"139","line":10,"column":10,"nodeType":"137","messageId":"138","endLine":10,"endColumn":15},{"ruleId":"135","severity":1,"message":"136","line":10,"column":17,"nodeType":"137","messageId":"138","endLine":10,"endColumn":23},{"ruleId":"135","severity":1,"message":"151","line":11,"column":8,"nodeType":"137","messageId":"138","endLine":11,"endColumn":14},{"ruleId":"135","severity":1,"message":"152","line":24,"column":33,"nodeType":"137","messageId":"138","endLine":24,"endColumn":36},{"ruleId":"135","severity":1,"message":"153","line":25,"column":12,"nodeType":"137","messageId":"138","endLine":25,"endColumn":23},{"ruleId":"135","severity":1,"message":"154","line":25,"column":33,"nodeType":"137","messageId":"138","endLine":25,"endColumn":42},{"ruleId":"135","severity":1,"message":"155","line":50,"column":12,"nodeType":"137","messageId":"138","endLine":50,"endColumn":16},{"ruleId":"135","severity":1,"message":"156","line":51,"column":11,"nodeType":"137","messageId":"138","endLine":51,"endColumn":22},{"ruleId":"135","severity":1,"message":"157","line":52,"column":11,"nodeType":"137","messageId":"138","endLine":52,"endColumn":21},{"ruleId":"135","severity":1,"message":"142","line":1,"column":23,"nodeType":"137","messageId":"138","endLine":1,"endColumn":31},{"ruleId":"135","severity":1,"message":"158","line":2,"column":17,"nodeType":"137","messageId":"138","endLine":2,"endColumn":25},{"ruleId":"135","severity":1,"message":"159","line":19,"column":11,"nodeType":"137","messageId":"138","endLine":19,"endColumn":16},{"ruleId":"135","severity":1,"message":"160","line":29,"column":28,"nodeType":"137","messageId":"138","endLine":29,"endColumn":37},{"ruleId":"135","severity":1,"message":"161","line":30,"column":29,"nodeType":"137","messageId":"138","endLine":30,"endColumn":39},{"ruleId":"135","severity":1,"message":"142","line":1,"column":23,"nodeType":"137","messageId":"138","endLine":1,"endColumn":31},{"ruleId":"135","severity":1,"message":"158","line":2,"column":17,"nodeType":"137","messageId":"138","endLine":2,"endColumn":25},{"ruleId":"135","severity":1,"message":"162","line":3,"column":8,"nodeType":"137","messageId":"138","endLine":3,"endColumn":26},{"ruleId":"135","severity":1,"message":"163","line":4,"column":10,"nodeType":"137","messageId":"138","endLine":4,"endColumn":19},{"ruleId":"135","severity":1,"message":"160","line":21,"column":29,"nodeType":"137","messageId":"138","endLine":21,"endColumn":38},{"ruleId":"135","severity":1,"message":"161","line":22,"column":30,"nodeType":"137","messageId":"138","endLine":22,"endColumn":40},{"ruleId":"135","severity":1,"message":"164","line":1,"column":10,"nodeType":"137","messageId":"138","endLine":1,"endColumn":21},{"ruleId":"135","severity":1,"message":"165","line":4,"column":27,"nodeType":"137","messageId":"138","endLine":4,"endColumn":43},{"ruleId":"135","severity":1,"message":"159","line":6,"column":11,"nodeType":"137","messageId":"138","endLine":6,"endColumn":16},{"ruleId":"135","severity":1,"message":"164","line":1,"column":10,"nodeType":"137","messageId":"138","endLine":1,"endColumn":21},{"ruleId":"135","severity":1,"message":"166","line":4,"column":10,"nodeType":"137","messageId":"138","endLine":4,"endColumn":25},{"ruleId":"135","severity":1,"message":"159","line":6,"column":11,"nodeType":"137","messageId":"138","endLine":6,"endColumn":16},{"ruleId":"167","severity":1,"message":"150","line":2,"column":16,"nodeType":"137","messageId":"138","endLine":2,"endColumn":22},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"167","severity":1,"message":"139","line":4,"column":37,"nodeType":"137","messageId":"138","endLine":4,"endColumn":42},{"ruleId":"167","severity":1,"message":"136","line":4,"column":44,"nodeType":"137","messageId":"138","endLine":4,"endColumn":50},{"ruleId":"167","severity":1,"message":"168","line":24,"column":9,"nodeType":"137","messageId":"138","endLine":24,"endColumn":13},{"ruleId":"167","severity":1,"message":"169","line":24,"column":15,"nodeType":"137","messageId":"138","endLine":24,"endColumn":18},{"ruleId":"167","severity":1,"message":"170","line":26,"column":25,"nodeType":"137","messageId":"138","endLine":26,"endColumn":32},{"ruleId":"167","severity":1,"message":"146","line":5,"column":9,"nodeType":"137","messageId":"138","endLine":5,"endColumn":16},{"ruleId":"167","severity":1,"message":"171","line":15,"column":32,"nodeType":"137","messageId":"138","endLine":15,"endColumn":39},{"ruleId":"167","severity":1,"message":"170","line":16,"column":26,"nodeType":"137","messageId":"138","endLine":16,"endColumn":33},"no-native-reassign",["172"],"no-negated-in-lhs",["173"],"@typescript-eslint/no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Link' is defined but never used.","'GET_MOVIES' is defined but never used.","'useQuery' is defined but never used.","'gql' is defined but never used.","'history' is assigned a value but never used.","'useEffect' is defined but never used.","'AddForm' is defined but never used.","'EditForm' is defined but never used.","'GET_FAVOURITES' is defined but never used.","'Modal' is defined but never used.","'Button' is defined but never used.","'client' is defined but never used.","'res' is assigned a value but never used.","'updateMovie' is assigned a value but never used.","'updateRes' is assigned a value but never used.","'show' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'handleShow' is assigned a value but never used.","'useState' is defined but never used.","'Props' is defined but never used.","'movieData' is assigned a value but never used.","'seriesData' is assigned a value but never used.","'useHandleInputForm' is defined but never used.","'ADD_MOVIE' is defined but never used.","'useMutation' is defined but never used.","'GET_SERIES_BY_ID' is defined but never used.","'GET_MOVIE_BY_ID' is defined but never used.","no-unused-vars","'path' is assigned a value but never used.","'url' is assigned a value but never used.","'tagData' is assigned a value but never used.","'delData' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]